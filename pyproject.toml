[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "palo-alto-mcp"
version = "0.1.0"
description = "MCP server for Palo Alto Networks NGFW integration"
readme = "README.md"
authors = ["Calvin Remsburg <dev@cdot.io>"]
license = "MIT"
packages = [{ include = "palo_alto_mcp", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
modelcontextprotocol = ">=0.1.0"
httpx = ">=0.28.1"
pydantic = ">=2.11.2"
pydantic-settings = ">=2.8.1"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.5"
ruff = ">=0.11.4"
pyright = ">=1.1.398"
mypy = ">=1.15.0"
flake8 = ">=6.1.0"
isort = ">=5.12.0"
pre-commit = ">=3.5.0"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.11"

[tool.ruff]
target-version = "py310"
line-length = 128

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "ANN", "C4", "SIM", "ARG"]

[tool.ruff.lint.isort]
known-first-party = ["palo_alto_mcp"]

[tool.pyright]
include = ["src"]
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.isort]
profile = "black"
line_length = 128
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["palo_alto_mcp"]

[tool.flake8]
max-line-length = 128
exclude = [".git", "__pycache__", "build", "dist"]
extend-ignore = ["E203"]
per-file-ignores = ["__init__.py:F401"]

[tool.poetry.scripts]
palo-alto-mcp = "palo_alto_mcp.__main__:main"
